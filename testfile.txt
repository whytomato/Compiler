int global_var = 0;
const int a = 1;
const int n[2] = {0,1} , double_n[2][2]= {{1,2},{3,4}};
int ident = 1;
int n2[2] = {0,1},double_n2[2][2]={{1,2},{3,4}};
int func() {
    global_var = global_var + 1;
    return 1;
}
void func1(){}
int func2(int a){
    int b = 1;
    int l;
    int x = double_n2[0][0];
    int y = 2;
    y=y+1;
    y= double_n2[0][0]+a;
    ;
    y=y-1;
    y=y-y;
    int n3[2] = {0,1} , double_n3[2][2]= {1,2,3,4};
    int ident = 1;
    int n4[2] = {0,1},double_n4[2][2]={{1,2},{3,4}};
    a = 2;
    n4[0] = 1;
    double_n4[0][0]=2;
    a+n4[0];
    ;
    1;
    {}
    if(n2[0]==1){

    }
    if(a>1){

    }
    if(1>2){

    } else{

    }
    y=+-+1;
    if(y!=2){}
    if(!y){}
    if(1<=2){}
    if(1>=0){}
    if(2+1>=1){}
    if(1<2){}
    if(1==1){}
    if(1!=2){}
    if(1==1&&1!=2){}
    if(1!=1||2!=2){}

    int i=0;
    for ( i = 0; i < 10; i= i+1) {
        break;
    }
    int j=0;
    for ( j = 0; j < 5; j=j+1) {
        continue;
    }
    for ( j = 5; j >1 ; j=j-1) {

    }
    for (;  ; ) {
        break;
    }

    int p=0;
    for (;p<=5 ; p= p + 1) {
        if(1==1){}
        else{}

    }
    for(i=0;;i=i+1){
        if(i>3){
            break;
        }
    }
    for (;  j < 2; ) {
        j=j+1;
    }
    for (j=0; j <5 ; ) {
        j=j+1;
    }


    for(;; p = p + 1) {
        p = 2 * (p + 1);
        break;
    }
    for(j = 0;;) {
        j = j + 1;
        break;
    }
    return 2;
}
int func3(int a,int n[],int n2[][2]){
    return a-n[0];
}
void func4(int a,int n[],int n2[][2]){
    return;
}
int func5(int a){
    return 0;
}
int main(){
    int c=0;
    int h[1][1] = {1};
    int o[2] = {1,4};
    c=getint();
    int d=2,e=3;
    printf("21373213");
    if (0 && func()){
        ;
    }
    printf("\n%d\n",global_var);
    if (1 || func()) {
        ;
    }
    printf("%d\n",global_var);
    func();
    printf("%d\n", c);
    printf("%d\n", func5(a*c)+1);
    printf("%d\n", func5(a));
    printf("%d\n", a);
    printf("%d\n", func2(a * c + d % c + c / d - 1));
    printf("%d\n", n2[1] + double_n2[0][0]);
    printf("%d\n", func3(c,n2, double_n2));

    return 0;
}